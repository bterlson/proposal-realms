{"version":3,"file":"realm-shim.min.js","sources":["../src/accessors.js","../src/sanitize.js","../src/proxy.js","../src/evaluate.js","../src/evaluators.js","../src/sandbox.js","../src/intrinsics.js","../src/stdlib.js","../src/utils.js","../src/realm.js","../src/commons.js"],"sourcesContent":["// Adapted from SES/Caja - Copyright (C) 2011 Google Inc.\n// https://github.com/google/caja/blob/master/src/com/google/caja/ses/startSES.js\n// https://github.com/google/caja/blob/master/src/com/google/caja/ses/repairES5.js\n\nimport { getPrototypeOf, defineProperty, getOwnPropertyDescriptor } from './commons';\n\n// Fix legacy accessors to comply with strict mode and ES2016 semantics,\n// we need to redefine them while in strict mode.\n// https://tc39.github.io/ecma262/#sec-object.prototype.__defineGetter__\n\nexport function repairAccessors(objProto) {\n\n    try {\n\n        defineProperty(objProto, '__defineGetter__', {\n            value: function (prop, func) {\n                return defineProperty(this, prop, {\n                    get: func,\n                    enumerable: true,\n                    configurable: true\n                });\n            }\n        });\n\n        defineProperty(objProto, '__defineSetter__', {\n            value: function (prop, func) {\n                return defineProperty(this, prop, {\n                    set: func,\n                    enumerable: true,\n                    configurable: true\n                });\n            }\n        });\n\n        defineProperty(objProto, '__lookupGetter__', {\n            value: function (prop) {\n                let base = this;\n                let desc;\n                while (base && !(desc = getOwnPropertyDescriptor(base, prop))) {\n                    base = getPrototypeOf(base);\n                }\n                return desc && desc.get;\n            }\n        });\n\n        defineProperty(objProto, '__lookupSetter__', {\n            value: function (prop) {\n                let base = this;\n                let desc;\n                while (base && !(desc = getOwnPropertyDescriptor(base, prop))) {\n                    base = getPrototypeOf(base);\n                }\n                return desc && desc.set;\n            }\n        });\n\n    } catch (ignore) {\n        // Ignored\n    }\n}","import { repairAccessors } from \"./accessors\";\n\n// locking down the environment\nexport function sanitize(sandbox) {\n\n    const { confinedWindow: { Object: { prototype: objProto } } } = sandbox;\n\n    repairAccessors(objProto);\n    // TODO: other steps\n}","import { defineProperty, deleteProperty, getOwnPropertyDescriptor, getOwnPropertyNames } from './commons';\n\n// this flag allow us to determine if the eval() call is a controlled eval done by the realm's code\n// or if it is user-land invocation, so we can react differently.\nlet isInternalEvaluation = false;\n\nexport function setInternalEvaluation() {\n    isInternalEvaluation = true;\n}\n\nexport function resetInternalEvaluation() {\n    isInternalEvaluation = false;\n}\n\nexport const proxyHandler = {\n    get(sandbox, propName) {\n        if (propName === 'eval' && isInternalEvaluation) {\n            resetInternalEvaluation();\n            return sandbox.confinedWindow.eval;\n        }\n        return sandbox.globalObject[propName];\n    },\n    set(sandbox, propName, newValue) {\n        sandbox.globalObject[propName] = newValue;\n        return true;\n    },\n    defineProperty(sandbox, propName, descriptor) {\n        defineProperty(sandbox.globalObject, propName, descriptor);\n        return true;\n    },\n    deleteProperty(sandbox, propName) {\n        return deleteProperty(sandbox.globalObject, propName);\n    },\n    has(sandbox, propName) {\n        if (propName === 'eval' && isInternalEvaluation) {\n            return true;\n        }\n        if (propName in sandbox.globalObject) {\n            return true;\n        } else if (propName in sandbox.confinedWindow) {\n            throw new ReferenceError(`${propName} is not defined. If you are using typeof ${propName}, you can change your program to use typeof global.${propName} instead`);\n        }\n        return false;\n    },\n    ownKeys(sandbox) {\n        return getOwnPropertyNames(sandbox.globalObject);\n    },\n    getOwnPropertyDescriptor(sandbox, propName) {\n        return getOwnPropertyDescriptor(sandbox.globalObject, propName);\n    },\n    isExtensible(sandbox) {\n        // TODO: can it becomes non-extensible?\n        return true;\n    },\n    getPrototypeOf(sandbox) {\n        return null;\n    },\n    setPrototypeOf(sandbox, prototype) {\n        return prototype === null ? true : false;\n    },\n};","import {\n    setInternalEvaluation,\n    resetInternalEvaluation,\n} from \"./proxy\";\n\nconst HookFnName = '$RealmEvaluatorIIFE$';\n\n// Wrapping the source with `with` statement creates a new lexical scope,\n// that can prevent access to the globals in the sandbox by shadowing them\n// via globalProxy.\nfunction addLexicalScopesToSource(sourceText) {\n    /**\n     * We use a `with` statement who uses `argments[0]`, which is the\n     * `sandbox.globalProxy` that implements the shadowing mechanism as well as access to\n     * any global variable.\n     * Aside from that, the `this` value in sourceText will correspond to `sandbox.thisValue`.\n     * We have to use `arguments` instead of naming them to avoid name collision.\n     */\n    // escaping backsticks to prevent leaking the original eval as well as syntax errors\n    sourceText = sourceText.replace(/\\`/g, '\\\\`');\n    return `\n        function ${HookFnName}() {\n            with(arguments[0]) {\n                return (function(){\n                    \"use strict\";\n                    return eval(\\`${sourceText}\\`);\n                }).call(this);\n            }\n        }\n    `;\n}\n\nfunction evalAndReturn(sourceText, sandbox) {\n    const { iframeDocument, confinedWindow } = sandbox;\n    const { body: iframeBody } = iframeDocument;\n    const script = iframeDocument.createElement('script');\n    script.type = 'text/javascript';\n    confinedWindow[HookFnName] = undefined;\n    script.appendChild(iframeDocument.createTextNode(sourceText));\n    iframeBody.appendChild(script);\n    iframeBody.removeChild(script);\n    const result = confinedWindow[HookFnName];\n    confinedWindow[HookFnName] = undefined;\n    return result;\n}\n\nexport function evaluate(sourceText, sandbox) {\n    if (!sourceText) {\n        return undefined;\n    }\n    sourceText = addLexicalScopesToSource(sourceText + '');\n    setInternalEvaluation();\n    const fn = evalAndReturn(sourceText, sandbox);\n    const result = fn.apply(sandbox.thisValue, [sandbox.globalProxy]);\n    resetInternalEvaluation();\n    return result;\n}","import { evaluate } from \"./evaluate\";\nimport { setPrototypeOf } from \"./commons\";\n\nfunction getEvalEvaluator(sandbox) {\n    const o = {\n        // trick to set the name of the function to \"eval\"\n        eval: function(sourceText) {\n            // console.log(`Shim-Evaluation: \"${sourceText}\"`);\n            return evaluate(sourceText, sandbox);\n        }\n    };\n    setPrototypeOf(o.eval, sandbox.Function);\n    o.eval.toString = () => 'function eval() { [shim code] }';\n    return o.eval;\n}\n\nfunction getFunctionEvaluator(sandbox) {\n    const { confinedWindow } = sandbox;\n    const f = function Function(...args) {\n        // console.log(`Shim-Evaluation: Function(\"${args.join('\", \"')}\")`);\n        const sourceText = args.pop();\n        const fnArgs = args.join(', ');\n        return evaluate(`(function anonymous(${fnArgs}){\\n${sourceText}\\n}).bind(this)`, sandbox);\n    }\n    f.prototype = confinedWindow.Function.prototype;\n    setPrototypeOf(f, f.prototype);\n    f.prototype.constructor = f;\n    f.toString = () => 'function Function() { [shim code] }';\n    return f;\n}\n\nexport function getEvaluators(sandbox) {\n    sandbox.Function = getFunctionEvaluator(sandbox);\n    sandbox.eval = getEvalEvaluator(sandbox);\n}","import { sanitize } from \"./sanitize\";\nimport { getEvaluators } from \"./evaluators\";\nimport { proxyHandler } from \"./proxy\";\nimport { assign } from \"./commons\";\n\nfunction createIframe() {\n    const el = document.createElement(\"iframe\");\n    el.style.display = \"none\";\n    // accessibility\n    el.title = \"script\";\n    el.setAttribute('aria-hidden', true);\n    document.body.appendChild(el);\n    return el;\n}\n\nexport function createSandbox() {\n    const iframe = createIframe();\n    const { contentDocument: iframeDocument, contentWindow: confinedWindow } = iframe;\n    const sandbox = {\n        iframe,\n        iframeDocument,\n        confinedWindow,\n        thisValue: undefined,\n        globalObject: undefined,\n        globalProxy: undefined,\n    };\n    sanitize(sandbox);\n    assign(sandbox, getEvaluators(sandbox));\n    sandbox.globalProxy = new Proxy(sandbox, proxyHandler);\n    return sandbox;\n}\n\nexport function setSandboxGlobalObject(sandbox, globalObject, thisValue) {\n    sandbox.thisValue = thisValue;\n    sandbox.globalObject = globalObject;\n}","import Realm from \"./realm\";\nimport { getPrototypeOf } from \"./commons\";\n\n/**\n * Get the intrinsics from Table 7 & Annex B\n * https://tc39.github.io/ecma262/#table-7\n * https://tc39.github.io/ecma262/#table-73\n */\nexport function getIntrinsics(sandbox) {\n    const { confinedWindow: global } = sandbox;\n\n    // Anonymous intrinsics.\n\n    const SymbolIterator = (typeof global.Symbol && global.Symbol.iterator) || \"@@iterator\";\n\n    const ArrayIteratorInstance = new global.Array()[SymbolIterator]();\n    const ArrayIteratorPrototype = getPrototypeOf(ArrayIteratorInstance);\n    const IteratorPrototype = getPrototypeOf(ArrayIteratorPrototype);\n\n    const AsyncFunctionInstance = global.eval(\"(async function(){})\");\n    const AsyncFunction = AsyncFunctionInstance.constructor;\n    const AsyncFunctionPrototype = AsyncFunction.prototype;\n\n    const GeneratorFunctionInstance = global.eval(\"(function*(){})\");\n    const GeneratorFunction = GeneratorFunctionInstance.constructor;\n    const Generator = GeneratorFunction.prototype;\n    const GeneratorPrototype = Generator.prototype;\n\n    let AsyncGeneratorFunctionInstance;\n    try {\n        AsyncGeneratorFunctionInstance = global.eval('(async function*(){})');\n    } catch(e) {\n      /* unsupported */\n    }\n    const AsyncGeneratorFunction = AsyncGeneratorFunctionInstance && AsyncGeneratorFunctionInstance.constructor;\n    const AsyncGenerator = AsyncGeneratorFunctionInstance && AsyncGeneratorFunction.prototype;\n    const AsyncGeneratorPrototype = AsyncGeneratorFunctionInstance && AsyncGenerator.prototype;\n\n    const AsyncFromSyncIteratorPrototype = AsyncGeneratorFunctionInstance && undefined; // TODO\n    const AsyncIteratorPrototype = AsyncGeneratorFunctionInstance && getPrototypeOf(AsyncGeneratorPrototype);\n\n    const MapIteratorObject = new global.Map()[SymbolIterator]();\n    const MapIteratorPrototype = getPrototypeOf(MapIteratorObject);\n\n    const SetIteratorObject = new global.Set()[SymbolIterator]();\n    const SetIteratorPrototype = getPrototypeOf(SetIteratorObject);\n\n    const StringIteratorObject = new global.String()[SymbolIterator]();\n    const StringIteratorPrototype = getPrototypeOf(StringIteratorObject);\n\n    const ThrowTypeError = global.eval(\n        '(function () { \"use strict\"; return Object.getOwnPropertyDescriptor(arguments, \"callee\").get; })()'\n    );\n\n    const TypedArray = getPrototypeOf(Int8Array);\n    const TypedArrayPrototype = TypedArray.prototype;\n\n    // Named intrinsics\n\n    return {\n        // *** Table 7\n\n        // %Array%\n        Array: global.Array,\n        // %ArrayBuffer%\n        ArrayBuffer: global.ArrayBuffer,\n        // %ArrayBufferPrototype%\n        ArrayBufferPrototype: global.ArrayBuffer.prototype,\n        // %ArrayIteratorPrototype%\n        ArrayIteratorPrototype,\n        // %ArrayPrototype%\n        ArrayPrototype: global.Array.prototype,\n        // %ArrayProto_entries%\n        ArrayProto_entries: global.Array.prototype.entries,\n        // %ArrayProto_foreach%\n        ArrayProto_foreach: global.Array.prototype.forEach,\n        // %ArrayProto_keys%\n        ArrayProto_keys: global.Array.prototype.forEach,\n        // %ArrayProto_values%\n        ArrayProto_values: global.Array.prototype.values,\n        // %AsyncFromSyncIteratorPrototype%\n        AsyncFromSyncIteratorPrototype,\n        // %AsyncFunction%\n        AsyncFunction,\n        // %AsyncFunctionPrototype%\n        AsyncFunctionPrototype,\n        // %AsyncGenerator%\n        AsyncGenerator,\n        // %AsyncGeneratorFunction%\n        AsyncGeneratorFunction,\n        // %AsyncGeneratorPrototype%\n        AsyncGeneratorPrototype,\n        // %AsyncIteratorPrototype%\n        AsyncIteratorPrototype,\n        // %Atomics%\n        Atomics: global.Atomics,\n        // %Boolean%\n        Boolean: global.Boolean,\n        // %BooleanPrototype%\n        BooleanPrototype: global.Boolean.prototype,\n        // %DataView%\n        DataView: global.DataView,\n        // %DataViewPrototype%\n        DataViewPrototype: global.DataView.prototype,\n        // %Date%\n        Date: global.Date,\n        // %DatePrototype%\n        DatePrototype: global.Date.prototype,\n        // %decodeURI%\n        decodeURI: global.decodeURI,\n        // %decodeURIComponent%\n        decodeURIComponent: global.decodeURIComponent,\n        // %encodeURI%\n        encodeURI: global.encodeURI,\n        // %encodeURIComponent%\n        encodeURIComponent: global.encodeURIComponent,\n        // %Error%\n        Error: global.Error,\n        // %ErrorPrototype%\n        ErrorPrototype: global.Error.prototype,\n        // %eval%\n        eval: sandbox.eval,\n        // %EvalError%\n        EvalError: global.EvalError,\n        // %EvalErrorPrototype%\n        EvalErrorPrototype: global.EvalError.prototype,\n        // %Float32Array%\n        Float32Array: global.Float32Array,\n        // %Float32ArrayPrototype%\n        Float32ArrayPrototype: global.Float32Array.prototype,\n        // %Float64Array%\n        Float64Array: global.Float64Array,\n        // %Float64ArrayPrototype%\n        Float64ArrayPrototype: global.Float64Array.prototype,\n        // %Function%\n        Function: sandbox.Function,\n        // %FunctionPrototype%\n        FunctionPrototype: sandbox.Function.prototype,\n        // %Generator%\n        Generator,\n        // %GeneratorFunction%\n        GeneratorFunction,\n        // %GeneratorPrototype%\n        GeneratorPrototype,\n        // %Int8Array%\n        Int8Array: global.Int8Array,\n        // %Int8ArrayPrototype%\n        Int8ArrayPrototype: global.Int8Array.prototype,\n        // %Int16Array%\n        Int16Array: global.Int16Array,\n        // %Int16ArrayPrototype%,\n        Int16ArrayPrototype: global.Int16Array.prototype,\n        // %Int32Array%\n        Int32Array: global.Int32Array,\n        // %Int32ArrayPrototype%\n        Int32ArrayPrototype: global.Int32Array.prototype,\n        // %isFinite%\n        isFinite: global.isFinite,\n        // %isNaN%\n        isNaN: global.isNaN,\n        // %IteratorPrototype%\n        IteratorPrototype,\n        // %JSON%\n        JSON: global.JSON,\n        // %JSONParse%\n        JSONParse: global.JSON.parse,\n        // %Map%\n        Map: global.Map,\n        // %MapIteratorPrototype%\n        MapIteratorPrototype,\n        // %MapPrototype%\n        MapPrototype: global.Map.prototype,\n        // %Math%\n        Math: global.Math,\n        // %Number%\n        Number: global.Number,\n        // %NumberPrototype%\n        NumberPrototype: global.Number.prototype,\n        // %Object%\n        Object: global.Object,\n        // %ObjectPrototype%\n        ObjectPrototype: global.Object.prototype,\n        // %ObjProto_toString%\n        ObjProto_toString: global.Object.prototype.toString,\n        // %ObjProto_valueOf%\n        ObjProto_valueOf: global.Object.prototype.valueOf,\n        // %parseFloat%\n        parseFloat: global.parseFloat,\n        // %parseInt%\n        parseInt: global.parseInt,\n        // %Promise%\n        Promise: global.Promise,\n        // %Promise_all%\n        Promise_all: global.Promise.all,\n        // %Promise_reject%\n        Promise_reject: global.Promise.reject,\n        // %Promise_resolve%\n        Promise_resolve: global.Promise.resolve,\n        // %PromiseProto_then%\n        PromiseProto_then: global.Promise.prototype.then,\n        // %PromisePrototype%\n        PromisePrototype: global.Promise.prototype,\n        // %Proxy%\n        Proxy: global.Proxy,\n        // %RangeError%\n        RangeError: global.RangeError,\n        // %RangeErrorPrototype%\n        RangeErrorPrototype: global.RangeError.prototype,\n        // %ReferenceError%\n        ReferenceError: global.ReferenceError,\n        // %ReferenceErrorPrototype%\n        ReferenceErrorPrototype: global.ReferenceError.prototype,\n        // %Reflect%\n        Reflect: global.Reflect,\n        // %RegExp%\n        RegExp: global.RegExp,\n        // %RegExpPrototype%\n        RegExpPrototype: global.RegExp.prototype,\n        // %Set%\n        Set: global.Set,\n        // %SetIteratorPrototype%\n        SetIteratorPrototype,\n        // %SetPrototype%\n        SetPrototype: global.Set.prototype,\n        // %SharedArrayBuffer%\n        // SharedArrayBuffer: undefined, // Deprecated on Jan 5, 2018\n        // %SharedArrayBufferPrototype%\n        // SharedArrayBufferPrototype: undefined, // Deprecated on Jan 5, 2018\n        // %String%\n        String: global.String,\n        // %StringIteratorPrototype%\n        StringIteratorPrototype,\n        // %StringPrototype%\n        StringPrototype: global.String.prototype,\n        // %Symbol%\n        Symbol: global.Symbol,\n        // %SymbolPrototype%\n        SymbolPrototype: global.Symbol.prototype,\n        // %SyntaxError%\n        SyntaxError: global.SyntaxError,\n        // %SyntaxErrorPrototype%\n        SyntaxErrorPrototype: global.SyntaxError.prototype,\n        // %ThrowTypeError%\n        ThrowTypeError,\n        // %TypedArray%\n        TypedArray,\n        // %TypedArrayPrototype%\n        TypedArrayPrototype,\n        // %TypeError%\n        TypeError: global.TypeError,\n        // %TypeErrorPrototype%\n        TypeErrorPrototype: global.TypeError.prototype,\n        // %Uint8Array%\n        Uint8Array: global.Uint8Array,\n        // %Uint8ArrayPrototype%\n        Uint8ArrayPrototype: global.Uint8Array.prototype,\n        // %Uint8ClampedArray%\n        Uint8ClampedArray: global.Uint8ClampedArray,\n        // %Uint8ClampedArrayPrototype%\n        Uint8ClampedArrayPrototype: global.Uint8ClampedArray.prototype,\n        // %Uint16Array%\n        Uint16Array: global.Uint16Array,\n        // %Uint16ArrayPrototype%\n        Uint16ArrayPrototype: Uint16Array.prototype,\n        // %Uint32Array%\n        Uint32Array: global.Uint32Array,\n        // %Uint32ArrayPrototype%\n        Uint32ArrayPrototype: global.Uint32Array.prototype,\n        // %URIError%\n        URIError: global.URIError,\n        // %URIErrorPrototype%\n        URIErrorPrototype: global.URIError.prototype,\n        // %WeakMap%\n        WeakMap: global.WeakMap,\n        // %WeakMapPrototype%\n        WeakMapPrototype: global.WeakMap.prototype,\n        // %WeakSet%\n        WeakSet: global.WeakSet,\n        // %WeakSetPrototype%\n        WeakSetPrototype: global.WeakSet.prototype,\n\n        // *** Annex B\n\n        // %escape%\n        escape: global.escape,\n        // %unescape%\n        unescape: global.unescape,\n\n        // TODO: Other special cases\n\n        // *** ESNext\n        Realm // intentionally passing around the Realm Constructor, which could be used as a side channel, but still!\n    };\n}\n","import { getIntrinsics } from \"./intrinsics\";\n\nexport function getStdLib(sandbox) {\n    const intrinsics = getIntrinsics(sandbox);\n\n    return {\n        // *** 18.1 Value Properties of the Global Object\n\n        Infinity: { value: Infinity },\n        NaN: { value: NaN },\n        undefined: { value: undefined },\n\n        // *** 18.2 Function Properties of the Global Object\n\n        eval: { value: intrinsics.eval },\n        isFinite: { value: intrinsics.isFinite },\n        isNaN: { value: intrinsics.isNaN },\n        parseFloat: { value: intrinsics.parseFloat },\n        parseInt: { value: intrinsics.parseInt },\n\n        decodeURI: { value: intrinsics.decodeURI },\n        decodeURIComponent: { value: intrinsics.decodeURIComponent },\n        encodeURI: { value: intrinsics.encodeURI },\n        encodeURIComponent: { value: intrinsics.encodeURIComponent },\n\n        // *** 18.3 Constructor Properties of the Global Object\n\n        Array: { value: intrinsics.Array },\n        ArrayBuffer: { value: intrinsics.ArrayBuffer },\n        Boolean: { value: intrinsics.Boolean },\n        DataView: { value: intrinsics.DataView },\n        Date: { value: intrinsics.Date },\n        Error: { value: intrinsics.Error },\n        EvalError: { value: intrinsics.EvalError },\n        Float32Array: { value: intrinsics.Float32Array },\n        Float64Array: { value: intrinsics.Float64Array },\n        Function: { value: intrinsics.Function },\n        Int8Array: { value: intrinsics.Int8Array },\n        Int16Array: { value: intrinsics.Int16Array },\n        Int32Array: { value: intrinsics.Int32Array },\n        Map: { value: intrinsics.Map },\n        Number: { value: intrinsics.Number },\n        Object: { value: intrinsics.Object },\n        Promise: { value: intrinsics.Promise },\n        Proxy: { value: intrinsics.Proxy },\n        RangeError: { value: intrinsics.RangeError },\n        ReferenceError: { value: intrinsics.ReferenceError },\n        RegExp: { value: intrinsics.RegExp },\n        Set: { value: intrinsics.Set },\n        // Deprecated\n        // SharedArrayBuffer: intrinsics.SharedArrayBuffer,\n        String: { value: intrinsics.String },\n        Symbol: { value: intrinsics.Symbol },\n        SyntaxError: { value: intrinsics.SyntaxError },\n        TypeError: { value: intrinsics.TypeError },\n        Uint8Array: { value: intrinsics.Uint8Array },\n        Uint8ClampedArray: { value: intrinsics.Uint8ClampedArray },\n        Uint16Array: { value: intrinsics.Uint16Array },\n        Uint32Array: { value: intrinsics.Uint32Array },\n        URIError: { value: intrinsics.URIError },\n        WeakMap: { value: intrinsics.WeakMap },\n        WeakSet: { value: intrinsics.WeakSet },\n\n        // *** 18.4 Other Properties of the Global Object\n\n        Atomics: { value: intrinsics.Atomics },\n        JSON: { value: intrinsics.JSON },\n        Math: { value: intrinsics.Math },\n        Reflect: { value: intrinsics.Reflect },\n\n        // *** Annex B\n\n        escape: { value: intrinsics.escape },\n        unescape: { value: intrinsics.unescape }\n    };\n}\n","export function assert(condition) {\n    if (!condition) {\n        throw new Error();\n    }\n}\n\nexport function IsCallable(obj) {\n    return typeof obj === 'function';\n}","import { createSandbox, setSandboxGlobalObject } from \"./sandbox\";\nimport { evaluate } from \"./evaluate\";\nimport { getStdLib } from \"./stdlib\";\nimport { getIntrinsics } from \"./intrinsics\";\nimport { assert, IsCallable } from \"./utils\";\nimport { defineProperties, create } from \"./commons\";\n\nconst RealmRecord = Symbol('Realm Slot');\nconst Intrinsics = Symbol('Intrinsics Slot');\nconst GlobalObject = Symbol('GlobalObject Slot');\nconst GlobalThisValue = Symbol('GlobalThisValue Slot');\nconst GlobalEnv = Symbol('GlobalEnv Slot');\nconst EvalHook = Symbol('EvalHook Slot');\nconst IsDirectEvalHook = Symbol('IsDirectEvalHook Slot');\nconst ImportHook = Symbol('ImportHook Slot');\nconst ImportMetaHook = Symbol('ImportMetaHook Slot');\nconst ShimSandbox = Symbol('Sandbox');\n\n// shim specific\nfunction getSandbox(realmRec) {\n    const sandbox = realmRec[ShimSandbox];\n    assert(typeof sandbox === 'object');\n    return sandbox;\n}\n\nfunction getCurrentRealmRecord() {\n    let realmRec = window[RealmRecord];\n    if (!realmRec) {\n        // this is an outer realm, and we should set up the RealmRecord\n        window[RealmRecord] = {\n            // TODO: mimic what the global realm record should have\n            // including default hooks, etc.\n        };\n    }\n    return realmRec;\n}\n\n// <!-- es6num=\"8.1.2.5\" -->\nfunction NewGlobalEnvironment(G, thisValue) {\n    // diverging from spec to accomodate the iframe as the lexical environment\n    // using a class for better debugability\n    class EnvironmentRecord {\n        constructor(/*globalObject*/) {\n            this[GlobalThisValue] = thisValue;\n        }\n    }\n    return new EnvironmentRecord(G);\n}\n\n// <!-- es6num=\"8.2.3\" -->\nfunction SetRealmGlobalObject(realmRec, globalObj, thisValue) {\n    if (globalObj === undefined) {\n        const intrinsics = realmRec[Intrinsics];\n        globalObj = create(intrinsics['ObjectPrototype']);\n    }\n    assert(typeof globalObj === 'object');\n    if (thisValue === undefined) thisValue = globalObj;\n    realmRec[GlobalObject] = globalObj;\n    const newGlobalEnv = NewGlobalEnvironment(globalObj, thisValue);\n    realmRec[GlobalEnv] = newGlobalEnv;\n    return realmRec;\n}\n\n// <!-- es6num=\"8.2.4\" -->\nfunction SetDefaultGlobalBindings(realmRec) {\n    const global = realmRec[GlobalObject];\n    // For each property of the Global Object specified in clause <emu-xref href=\"#sec-global-object\"></emu-xref>, do\n    // ---> diverging:\n    const GlobalObjectDescriptors = getStdLib(realmRec[ShimSandbox]);\n    defineProperties(global, GlobalObjectDescriptors);\n    return global;\n}\n\n// <!-- es6num=\"8.2.2\" -->\nfunction CreateIntrinsics(realmRec) {\n    // ---> diverging\n    let intrinsics = getIntrinsics(realmRec[ShimSandbox]);\n    realmRec[Intrinsics] = intrinsics;\n    return intrinsics;\n}\n\nfunction CreateRealmRec(intrinsics) {\n    let realmRec = /* new Realm Record from table-21 */ {\n        [Intrinsics]: {},\n        [GlobalObject]: undefined,\n        [GlobalEnv]: undefined,\n        // [TemplateMap]: [],\n        // [HostDefined]: undefined,\n        [EvalHook]: undefined,\n        [IsDirectEvalHook]: undefined,\n        [ImportHook]: undefined,\n        [ImportMetaHook]: undefined,\n        // ---> diverging to create the internal shim iframe\n        [ShimSandbox]: createSandbox(),\n    };\n    if (intrinsics === undefined) {\n        CreateIntrinsics(realmRec);\n    } else {\n        // 1. Assert: In this case, _intrinsics_ must be a Record with field names listed in column one of Table 7.\n        realmRec[Intrinsics] = intrinsics;\n    }\n    return realmRec;\n}\n\nfunction InvokeDirectEvalHook(realmRec, x) {\n    // 1. Assert: realm is a Realm Record.\n    const fn = realmRec[EvalHook];\n    if (fn === undefined) return x;\n    assert(IsCallable(fn) === true);\n    return fn.call(undefined, x);\n}\n\n// <!-- es6num=\"18.2.1.1\" -->\nfunction PerformEval(x, evalRealm, strictCaller, direct) {\n    assert(direct === false ? strictCaller === false : true);\n    // realm spec segment begins\n    if (direct === true) {\n        x = InvokeDirectEvalHook(x, evalRealm);\n    }\n    // realm spec segment ends\n    if (typeof x !== 'string') return x;\n    // ---> diverging\n    const sandbox = getSandbox(evalRealm);\n    return evaluate(x, sandbox);\n}\n\nexport default class Realm {\n\n    constructor(options) {\n        const O = this;\n        const parentRealm = getCurrentRealmRecord();\n        const opts = Object(options);\n        let importHook = opts.importHook;\n        if (importHook === \"inherit\") {\n            importHook = parentRealm[ImportHook];\n        } else if (importHook !== undefined && IsCallable(importHook) === false) throw new TypeError();\n        let importMetaHook  = opts.importMetaHook;\n        if (importMetaHook === \"inherit\") {\n            importMetaHook = parentRealm[ImportMetaHook];\n        } else if (importMetaHook !== undefined && IsCallable(importMetaHook) === false) throw new TypeError();\n        let evalHook = opts.evalHook;\n        if (evalHook === \"inherit\") {\n            evalHook = parentRealm[EvalHook];\n        } else if (evalHook !== undefined && IsCallable(evalHook) === false) throw new TypeError();\n        let isDirectEvalHook = opts.isDirectEvalHook;\n        if (isDirectEvalHook === \"inherit\") {\n            isDirectEvalHook = parentRealm[IsDirectEvalHook];\n        } else if (isDirectEvalHook !== undefined && IsCallable(isDirectEvalHook) === false) throw new TypeError();\n        let intrinsics = opts.intrinsics;\n        if (intrinsics === \"inherit\") {\n            intrinsics = parentRealm[Intrinsics];\n        } else if (intrinsics !== undefined) throw new TypeError();\n        let thisValue = opts.thisValue;\n        if (thisValue !== undefined && typeof thisValue !== \"object\") throw new TypeError();\n        const realmRec = CreateRealmRec(intrinsics);\n        O[RealmRecord] = realmRec;\n        SetRealmGlobalObject(realmRec, undefined, thisValue);\n        if (importHook === undefined) {\n            // new built-in function object as defined in <emu-xref href=\"#sec-realm-default-import-hook-functions\"></emu-xref>\n            importHook = function (/*referrer, specifier*/) {\n                throw new TypeError();\n            }\n        }\n        realmRec[ImportHook] = importHook;\n        if (evalHook !== undefined) {\n            realmRec[EvalHook] = evalHook;\n        }\n        if (isDirectEvalHook !== undefined) {\n            realmRec[IsDirectEvalHook] = isDirectEvalHook;\n        }\n        let init = O.init;\n        if (!IsCallable(init)) throw new TypeError();\n        init.call(O);\n        // ---> diverging\n        setSandboxGlobalObject(realmRec[ShimSandbox], realmRec[GlobalObject], realmRec[GlobalEnv][GlobalThisValue]);\n    }\n\n    init() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        SetDefaultGlobalBindings(O[RealmRecord]);\n    }\n\n    eval(x) {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        let evalRealm = O[RealmRecord];\n        // HostEnsureCanCompileStrings(the current Realm Record, _evalRealm_).\n        return PerformEval(x, evalRealm, false, false);\n    }\n\n    get stdlib() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        // TODO: align with spec\n        const sandbox = getSandbox(O[RealmRecord]);\n        return getStdLib(sandbox);\n    }\n\n    get intrinsics() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        // TODO: align with spec\n        const sandbox = getSandbox(O[RealmRecord]);\n        return getIntrinsics(sandbox.confinedWindow);\n    }\n\n    get global() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        return O[RealmRecord][GlobalObject];\n    }\n\n    get thisValue() {\n        let O = this;\n        if (typeof O !== 'object') throw new TypeError();\n        if (!(RealmRecord in O)) throw new TypeError();\n        let envRec = O[RealmRecord][GlobalEnv];\n        return envRec[GlobalThisValue];\n    }\n\n}\n\nRealm.toString = () => 'function Realm() { [shim code] }';","// Declare shorthand functions. Sharing these declarations accross modules\n// improves both consitency and minification. Unused declarations are dropped\n// by the tree shaking process.\n\nexport const {\n  assign,\n  create,\n  defineProperties,\n  freeze,\n  getOwnPropertyDescriptors,\n  getOwnPropertyNames\n} = Object;\n\nexport const {\n  apply,\n  defineProperty,\n  deleteProperty,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  ownKeys,\n  setPrototypeOf\n} = Reflect;\n\n\n"],"names":["repairAccessors","objProto","prop","func","defineProperty","this","base","desc","getOwnPropertyDescriptor","getPrototypeOf","get","set","ignore","sanitize","sandbox","confinedWindow","Object","prototype","setInternalEvaluation","resetInternalEvaluation","addLexicalScopesToSource","sourceText","replace","HookFnName","evalAndReturn","iframeDocument","iframeBody","body","script","createElement","type","undefined","appendChild","createTextNode","removeChild","result","evaluate","fn","apply","thisValue","globalProxy","getEvalEvaluator","o","eval","Function","toString","getFunctionEvaluator","f","args","pop","join","constructor","getEvaluators","createIframe","el","document","style","display","title","setAttribute","createSandbox","iframe","contentDocument","contentWindow","Proxy","proxyHandler","setSandboxGlobalObject","globalObject","getIntrinsics","global","SymbolIterator","_typeof","Symbol","iterator","ArrayIteratorInstance","Array","ArrayIteratorPrototype","IteratorPrototype","AsyncFunctionInstance","AsyncFunction","AsyncFunctionPrototype","GeneratorFunctionInstance","GeneratorFunction","Generator","GeneratorPrototype","AsyncGeneratorFunctionInstance","e","AsyncGeneratorFunction","AsyncGenerator","AsyncGeneratorPrototype","AsyncFromSyncIteratorPrototype","AsyncIteratorPrototype","MapIteratorObject","Map","MapIteratorPrototype","SetIteratorObject","Set","SetIteratorPrototype","StringIteratorObject","String","StringIteratorPrototype","ThrowTypeError","TypedArray","Int8Array","TypedArrayPrototype","ArrayBuffer","entries","forEach","values","Atomics","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","EvalError","Float32Array","Float64Array","Int16Array","Int32Array","isFinite","isNaN","JSON","parse","Math","Number","valueOf","parseFloat","parseInt","Promise","all","reject","resolve","then","RangeError","ReferenceError","Reflect","RegExp","SyntaxError","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakSet","escape","unescape","getStdLib","intrinsics","value","Infinity","NaN","assert","condition","IsCallable","obj","getSandbox","realmRec","ShimSandbox","getCurrentRealmRecord","window","RealmRecord","NewGlobalEnvironment","G","GlobalThisValue","SetRealmGlobalObject","globalObj","Intrinsics","create","GlobalObject","newGlobalEnv","GlobalEnv","SetDefaultGlobalBindings","GlobalObjectDescriptors","CreateIntrinsics","CreateRealmRec","EvalHook","IsDirectEvalHook","ImportHook","ImportMetaHook","InvokeDirectEvalHook","x","call","PerformEval","evalRealm","strictCaller","direct","assign","defineProperties","getOwnPropertyNames","deleteProperty","setPrototypeOf","isInternalEvaluation","propName","newValue","descriptor","Realm","options","O","parentRealm","opts","importHook","importMetaHook","evalHook","isDirectEvalHook","init"],"mappings":"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"}